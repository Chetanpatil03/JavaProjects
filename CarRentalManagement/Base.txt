

    The car rental system in java using OOPs Concept.

    Features :
        Rent a car
        Get Confirmation
        Using java OOPs only


    There are mainly Four Class

    1.Car 
    2.Rental 
    3.Customer
    4.Menu
    5.Main

    Car have :
        car id ---- Interger
        car name ---- String
        car brand  --- String
        Base price  ---Long
        isAvailable -- Boolean

        also have methods:
           -getter methods like :
            -getCarId
            -getCarName
            -getCarModel
          
          -calculatePrice
          -isAvailable
          -Rent
          -returnCar

        With the help of this methods we manage car like car is available or not, calculate price, take rent, car return procedure etc.

    Customer have : 
        Customer id ----- Interger
        Customer name ---------- String
        Customer Phone no --------- Interger

        Also have methods :

        getter methods :
        -getCustName
        -getCustId
        -getCustPhone

    This class have all the information about the Customer which is going to rent a car.
    we store all data in ArrayList.

    Rental class have:

        Customer ---------- Customer
        Car ----------------- Car
        Day --------------- int 
        private data members.

        Have methods like :
            getCar()
            getCustomer()
            getDay()
        
        this class is used to manage the customers and cars.

    
    CarRentalSystem:
    Created ArrayList for storing car information

    has data variables as :
    private ArrayList<Car> cars;
    private ArrayList<Customer> customers;
    private ArrayList<Rental> rentals;


    Also have method for adding and managing car information.

    
    public void addCar(Car car){
        cars.add(car); 
    }

    public void addCustomer(Customer customer){
        customers.add(customer);
    }

    public void rentCar(Car car,Customer customer,int days){
        if (car.isAvailable()) {
            car.rent();
            rentals.add(new Rental(car, customer, days));
        }
        else{
            System.out.println("The car is not available for rent ..........");
        }
    }

    public void returnCar(Car car){
        Rental rentalToRemove = null;
        
        for(Rental rental : rentals){
            if (rental.getCar() == car) {
                rentalToRemove = rental;
                break;
            }
        }

        if (rentalToRemove != null) {
            rentals.remove(rentalToRemove);
            System.out.println("Car returned Successfully........!");
        }
        else{
            System.out.println("Car was not Rented");
        }

        car.returnCar();
    }

    with this we can manage.


    Menu FUNCTION in rentals class.
        built for show menu on Terminal screen.

        it has all the formating for the project.


        mainly three parts
        1. take car on rent
        2. Return car 
        3. Exit from the menu.

   4. Main class :

    All the nessarry objects are Created here.

    Main FUNCTION: 
    
    public static void main(String[] args) {
        CarRentalSystem rentalSystem = new CarRentalSystem();

        Car car1 = new Car("C001", "Thar", "Mahindra", 150, false);
        Car car2 = new Car("C002", "Fortuner", "Toyota", 300, false);
        Car car3 = new Car("C003", "Safari", "TATA", 200, false);

        rentalSystem.addCar(car3);
        rentalSystem.addCar(car2);
        rentalSystem.addCar(car1);

        rentalSystem.Menu();
    } 


    